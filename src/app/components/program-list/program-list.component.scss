// program-list.component.scss - OPTIMIZADO PARA TAILWIND

:host {
  display: block;
  width: 100%;
  max-width: 100vw;
  overflow-x: hidden;
}

// Optimizaciones específicas para el virtual scroll
cdk-virtual-scroll-viewport {
  contain: strict;
  will-change: scroll-position;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  transform: translateZ(0);
  backface-visibility: hidden;
  width: 100% !important;
}

// Eliminar scroll horizontal específicamente para este componente
.programs-container {
  overflow-x: hidden !important;
  overflow-y: visible !important;
  width: 100% !important;
  position: relative !important;
}

// Grid específico para programas - asegurar que no haya overflow y separación de canales
.programs-grid {
  display: grid !important;
  gap: 0 !important;
  grid-auto-rows: 75px !important; // cada fila de grid mide 75px
  width: 100% !important;
  overflow: hidden !important;
  min-height: 75px !important;
  position: relative !important;

  /* evitar que los hijos forcen anchura y rompan el layout */
  > * {
    min-width: 0;
    box-sizing: border-box;
  }

  > .program-item {
    min-width: 0 !important;
    max-width: 100% !important;
    position: relative !important;
    display: block !important; /* dejar que el grid controle su anchura */
    height: 100% !important; /* usar la altura de la fila del grid */
    overflow: hidden !important;
    box-sizing: border-box !important;
  }

  // Asegurar que cada programa ocupe exactamente el espacio del grid
  > div {
    width: 100% !important;
    min-width: 0 !important;
    max-width: 100% !important;
    position: relative !important;
    display: flex !important;
    flex-direction: column !important;
    height: 75px !important; // Altura fija
    overflow: hidden !important;
    border-box: box-sizing !important;
  }
}

// Contenedor de cada canal para evitar solapamientos
.channel-programs-container {
  position: relative !important;
  height: 75px !important;
  overflow: visible !important; // Permitir que el banner se muestre
  isolation: isolate !important;
  width: 100% !important;

  // Asegurar que el grid ocupe exactamente el mismo ancho que el header
  .programs-grid {
    width: 100% !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
  }
}

// Separar claramente cada canal
.channel-row {
  border-bottom: 1px solid rgba(75, 85, 99, 0.4) !important;
  isolation: isolate;

  &:last-child {
    border-bottom: none !important;
  }
}

// Mejoras de rendimiento GPU para transiciones
.program-item {
  transform: translateZ(0);
  will-change: transform;

  &:hover {
    transform: translateZ(0) scale(1.01);
  }
}

// Banner expandido - parte del flujo normal del documento
.expanded-banner {
  position: relative !important;
  z-index: 50 !important;
  isolation: isolate;
  border-radius: 0 0 16px 16px !important;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
  overflow: hidden !important;
}

// Focus visible mejorado para accesibilidad
.focus-visible {
  &:focus-visible {
    outline: 2px solid #ef4444;
    outline-offset: 2px;
  }
}

// Dropdowns con z-index correctos y dinámicos
.dropdown-container {
  position: relative;
  z-index: 45 !important;

  // Menús dropdown específicos con prioridad sobre marcador de tiempo
  > div:last-child {
    z-index: 50 !important; // Mayor que el marcador cuando hay dropdowns abiertos
    max-height: 250px !important;
    overflow-y: auto !important;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.8) !important;
  }
}

// Marcador de tiempo con z-index dinámico
.time-indicator {
  position: absolute !important;
  pointer-events: none !important;

  // Z-index será controlado dinámicamente por getTimeIndicatorZIndex()
  // Cuando no hay dropdowns: z-index: 10000 (alta prioridad)
  // Cuando hay dropdowns abiertos: z-index: 30 (baja prioridad)

  // Elementos del marcador
  .time-indicator-label,
  > div {
    pointer-events: none !important;
    z-index: inherit !important;
  }
}

// Programas con z-index bajos pero escalonados
.program-item {
  z-index: 10 !important;

  &.layer-1 {
    z-index: 11 !important;
  }
  &.layer-2 {
    z-index: 12 !important;
  }
  &.layer-3 {
    z-index: 13 !important;
  }
}

// Header fijo con z-index medio
.time-header {
  z-index: 20 !important;
}

// Asegurar que el marcador de tiempo atraviese todos los contenedores
.time-indicator {
  position: fixed !important;
  z-index: 999999 !important;
  pointer-events: none !important;

  // Calculamos la posición considerando el offset del contenedor
  transform: translateX(var(--time-indicator-offset, 0px));

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: inherit;
    z-index: inherit;
  }
}

// Asegurar que el header de tiempo tenga el z-index correcto
.time-header {
  position: sticky !important;
  top: 0 !important;
  z-index: 35 !important;

  // El marcador debe estar por encima del header
  ~ .time-indicator {
    z-index: 999999 !important;
  }
}

// Contenedor principal debe permitir el marcador
cdk-virtual-scroll-viewport {
  position: relative !important;
  z-index: 10 !important;

  // Asegurar que el marcador sea visible sobre el viewport
  .time-indicator {
    z-index: 999999 !important;
  }
}

// Responsive optimizations - solo lo esencial
@media (max-width: 640px) {
  .programs-grid {
    grid-template-columns: repeat(7, 1fr) !important;
    gap: 0 !important;
  }

  :host {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// Estilos específicos para programas cortados
.program-cut-start {
  border-left: 2px solid theme("colors.yellow.400") !important;
  background: linear-gradient(
    90deg,
    theme("colors.yellow.400/10") 0%,
    transparent 20%
  ) !important;

  &::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background: linear-gradient(
      to bottom,
      theme("colors.yellow.400"),
      theme("colors.orange.500")
    );
    opacity: 0.8;
    z-index: 10;
  }
}

.program-cut-end {
  border-right: 2px solid theme("colors.yellow.400") !important;
  background: linear-gradient(
    270deg,
    theme("colors.yellow.400/10") 0%,
    transparent 20%
  ) !important;

  &::after {
    content: "";
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background: linear-gradient(
      to bottom,
      theme("colors.yellow.400"),
      theme("colors.orange.500")
    );
    opacity: 0.8;
    z-index: 10;
  }
}

// Programa cortado en ambos extremos
.program-cut-start.program-cut-end {
  background: linear-gradient(
    90deg,
    theme("colors.yellow.400/10") 0%,
    transparent 20%,
    transparent 80%,
    theme("colors.yellow.400/10") 100%
  ) !important;
}

// Animación sutil para programas cortados
.program-cut-start,
.program-cut-end {
  animation: subtle-pulse 3s ease-in-out infinite;
}

@keyframes subtle-pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.95;
  }
}

// Estilos específicos para selección múltiple de categorías
.category-multiple-indicator {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  animation: pulse-soft 2s ease-in-out infinite;
}

@keyframes pulse-soft {
  0%,
  100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

// Dropdown de categorías con mejor scroll
.dropdown-container {
  .category-dropdown {
    scrollbar-width: thin;
    scrollbar-color: theme("colors.red.500") theme("colors.gray.800");

    &::-webkit-scrollbar {
      width: 4px;
    }

    &::-webkit-scrollbar-track {
      background: theme("colors.gray.800");
      border-radius: 2px;
    }

    &::-webkit-scrollbar-thumb {
      background: theme("colors.red.500");
      border-radius: 2px;

      &:hover {
        background: theme("colors.red.400");
      }
    }
  }
}

// Mejorar contraste para elementos seleccionados múltiples
.bg-red-600\/30 {
  background-color: rgba(220, 38, 38, 0.4) !important;
  border-left-color: theme("colors.red.400") !important;
}
// Grid específico para programas - asegurar que no haya overflow y separación de canales
.programs-grid-container {
  position: relative !important;
  width: 100% !important;
  overflow: hidden !important;
  min-height: 75px !important;
}

.programs-grid-layer {
  display: grid !important;
  grid-template-columns: repeat(
    42,
    1fr
  ) !important; // 7 slots × 6 subdivisiones de 5 min
  width: 100% !important;
  overflow: hidden !important;
  height: 75px !important;
  position: absolute !important;

  // Asegurar que cada programa ocupe exactamente el espacio del grid
  > .program-item {
    width: 100% !important;
    min-width: 0 !important;
    position: relative !important;
    display: flex !important;
    flex-direction: column !important;
    height: 75px !important;
    overflow: hidden !important;
    box-sizing: border-box !important;

    // Para programas muy pequeños (5-10 minutos), hacer el texto aún más pequeño
    &[style*="grid-column-end: 2"],
    &[style*="grid-column-end: 3"] {
      .text-xs {
        font-size: 0.625rem !important;
        line-height: 0.75rem !important;
      }

      // Ocultar hora en programas de 5-10 minutos
      p {
        display: none !important;
      }
    }
  }
}

// Asegurar que el grid de horas siempre se muestre correctamente
.time-header {
  .grid {
    display: grid !important;
    grid-template-columns: repeat(7, 1fr) !important;

    > div {
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
    }
  }
}
